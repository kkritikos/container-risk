package gr.aegean.container.risk.data;

import java.util.HashMap;
import java.util.Map;

import gr.aegean.container.risk.configuration.PropertyReader;

public class VulnerabilityRepository {
	private static final int TIMES = 3;
	private Map<String, Vulnerability> repository = new HashMap<String, Vulnerability>();
	
	public VulnerabilityRepository() {
		
	}
	
	public Vulnerability getVulnerability(String cveId) {
		Vulnerability v = repository.get(cveId);
		if (v == null) v = retrieveVulnerability(cveId);
		
		return v;
	}
	
	private org.json.JSONObject readVulnerabilityObject(String cveId){
		String nistUrl = PropertyReader.getNvdUrl() + cveId;
		String cveUrl = PropertyReader.getCveApiUrl() + cveId + ".json";
		RetrieveDataFromOnlineDB onlineDb = new RetrieveDataFromOnlineDB();
		org.json.JSONObject object = null;
		
		for (int i = 0; i < TIMES; i++) {
			try {
				object = onlineDb.readFromNistDB(nistUrl);
			}
			catch(Exception e) {
				if (e instanceof NullPointerException) {
					System.out.println("cveId: " + cveId + " maps to CVSS 3.1");
					break;
				}
				else System.out.println("Could not read from NVD the url: " + nistUrl);
			}
			
			try {
				if (object == null) object = onlineDb.readFromCveApi(cveUrl);
			}
			catch(Exception e) {
				System.out.println("Could not read from CVE-API the url: " + cveUrl);
			}
			
			if (object != null) break;
		}
		
		return object;
	}
	
	private Vulnerability retrieveVulnerability(String cveId) {
		Vulnerability v = new Vulnerability();
		v.setCveId(cveId);
		
		org.json.JSONObject object = readVulnerabilityObject(cveId);
		if (object == null) return null;
			
		String av = (String) object.get("accessVector");
		v.setAccessVector(av);
			
		String ac = (String) object.get("accessComplexity");
		v.setAccessComplexity(ac);
			
		String au = (String) object.get("authentication");
		v.setAuthentication(au);
			
		String confidentiality = (String) object.get("confidentialityImpact");
		v.setConfidentialityImpact(confidentiality);
			
		String integrity = (String) object.get("integrityImpact");
		v.setIntegrityImpact(integrity);
			
		String availability = (String) object.get("availabilityImpact");
		v.setAvailabilityImpact(availability);
		
		return v;
	}
}
